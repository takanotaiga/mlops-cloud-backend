name: Build Containers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: docker-matrix-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}

jobs:
  build:
    name: Build and Push (${{ matrix.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: cv
            file: Dockerfile.cv
            image_suffix: -cv
          - name: hm
            file: Dockerfile.hm
            image_suffix: -hm
          - name: sm
            file: Dockerfile.sm
            image_suffix: -sm
          - name: cm
            file: Dockerfile.cm
            image_suffix: -cm
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}${{ matrix.image_suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
